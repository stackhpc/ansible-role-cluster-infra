---
heat_template_version: pike

description: >
  Heat stack template for a stack containing one Neutron port which is on 
  a named network and subnet (and does not have a floating IP)

parameters:
  node_idx:
    type: number
    label: Node index within cluster group
  cluster_net:
    type: json
    label: Network names and subnets to which the nodes should be attached
  cluster_fips:
    type: json
    label: List of UUIDs of prealloacted floating IPs
    default: []
  router_networks:
    type: json
    label: Permit host to route IP traffic from specific networks through this port
    default: []

conditions:
  security_groups_set:
    yaql:
      expression: $.data.cluster_net.containsKey('security_groups')
      data:
        cluster_net: { get_param: [ cluster_net, 0 ] }

resources:
  port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: [ cluster_net, 0, net ] }
      security_groups:
        if:
          - security_groups_set
          - { get_param: [ cluster_net, 0, security_groups ] }
          - []
      fixed_ips:
        - subnet_id: { get_param: [ cluster_net, 0, subnet ] }

outputs:
  OS::stack_id:
    description: The network list
    value: 
      - port: { get_resource: port }

  networks:
    description: The network list
    value: 
      - port: { get_resource: port }

  internal_ip:
    description: The IP assigned on the named cluster networks
    value:
      - - { get_attr: [ port, fixed_ips, 0, ip_address ] }

  primary_ip:
    description: The primary IP of the instance
    value: { get_attr: [ port, fixed_ips, 0, ip_address ] }
