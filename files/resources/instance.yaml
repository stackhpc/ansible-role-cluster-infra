---
heat_template_version: pike

description: >
  Heat stack containing a Nova instance.

parameters:
  name:
    type: string
    label: Instance name
  flavor:
    type: string
    label: Flavor name or UUID
  image:
    type: string
    label: Image name or UUID
  volume_size:
    type: number
    label: Volume size in GB
  volume_type:
    type: string
    label: Volume type
  key_name:
    type: string
    label: SSH key pair name
  availability_zone:
    type: string
    label: Availability zone
    default: nova
  config_drive:
    type: boolean
    label: Whether to provide metadata via a configdrive
    default: false
  group_node_ports:
    type: json
    label: Nested list of port resources for all nodes in this group
  group_primary_ip:
    type: json
    label: List of primary IPs for all nodes in this group
  group_node_ips:
    type: json
    label: List of internal IPs for all nodes in this group
  node_idx:
    type: number
    label: Resource group index of this node

resources:

  instance:
    type: OS::Nova::Server
    properties:
      name: { get_param: name }
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: key_name }
      networks:
        yaql:
          expression: "$.data != '' and $.data.select({'port' => $.port}) or []"
          data: {get_param: [group_node_ports, {get_param: node_idx}]}
      availability_zone: { get_param: availability_zone }
      config_drive: { get_param: config_drive }

outputs:
  OS::stack_id:
    description: ID of the Nova instance
    value: { get_resource: instance }

  instance_data:
    description: ID of the primary IP
    value: 
      name: {get_param: name}
      ip: {get_param: [group_primary_ip, {get_param: node_idx}]}
      node_ips: {get_param: [group_node_ips, {get_param: node_idx}]}
      id: {get_resource: instance} 
